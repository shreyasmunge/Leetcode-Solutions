# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
class Solution:
    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:
        def bfs(node):
            if not node:
                return 
            res = []
            queue = deque()
            queue.append(node)
            while queue:
                level = len(queue)
                lis = []
                for i in range(level):
                    ele = queue.popleft()
                    lis.append(ele.val)
                    if ele.left:
                        queue.append(ele.left)
                    if ele.right:
                        queue.append(ele.right)
                res.append(lis)
            return res[::-1]
        return bfs(root)
            
                

        
