from collections import deque
from string import ascii_lowercase
class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        queue = deque()
        #create a set , remove from set when found
        ladder = set(wordList)
        if endWord not in ladder:
            return 0
        queue.append([beginWord,1])
        #pop from queue,check all posible words for current word,if present in set then remove from set and is not endWord and append to queue also increment count
        while queue:
            word,count = queue.popleft()
            for i in range(len(word)):
                for c in ascii_lowercase:
                    newWord = word[:i] + c + word[i+1:]
                    if newWord in ladder and newWord!=endWord:
                        ladder.remove(newWord)
                        queue.append([newWord,count+1])
                    elif newWord == endWord:
                        return count+1

        return 0

                    
        
