class Solution:
    def sumSubarrayMins(self, arr: List[int]) -> int:
        n=len(arr)
        stack = []
        left = [-1]*n
        right = [n]*n
        for i in range(len(arr)):       #find previous smaller element
            while stack and arr[stack[-1]]>=arr[i]:
                stack.pop()
            if stack:
                left[i] = stack[-1]
            stack.append(i)

        stack = []

        for i in range(len(arr)-1,-1,-1): #find next smaller element
            while stack and arr[stack[-1]]>arr[i]:
                stack.pop()
            if stack:
                right[i] = stack[-1]
            stack.append(i)

        mod = 10**9 +7

        
        total = 0
        for i in range(n):
            total += (i - left[i]) * (right[i] - i) * arr[i]
            total %= mod

        return total
