# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: Optional[ListNode]) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        slow = head
        fast = head.next
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        cur = slow.next
        left = slow.next = None
        while cur:
            right = cur.next
            cur.next = left
            left = cur
            cur = right
        second= left
        first = head
        while second:
            temp1,temp2 = first.next,second.next
            first.next = second
            second.next = temp1
            first = temp1
            second = temp2

            
        
            

            
        
        
            

        


            


        
