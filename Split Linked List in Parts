# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def splitListToParts(self, head: Optional[ListNode], k: int) -> List[Optional[ListNode]]:
        lis = [None]*k
        cur = head 
        count = 0 
        while cur:
            cur = cur.next
            count+=1
        extra = count%k
        size = count//k
        cur = head
        pre = None
        for i in range(k):
            lis[i] = cur
            for j in range(size+(1 if extra >0 else 0)):
                pre = cur
                cur = cur.next
            if pre:
                pre.next = None
            if extra>0:
                extra-=1
        return lis



        
