Solution 1:
class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        #find largest idx(k) such that nums[k] < nums[k + 1]
        k = -1
        for i in range(len(nums)-2,-1,-1):
            if nums[i]<nums[i+1]:
                k = i
                break
        #if k is 0, then reverse else, find largest ele(l) to right of k,swap k and l
        #then reverse k+1 to last
        if k==-1:
            nums.reverse()
            return
        else:
            for l in range(len(nums)-1,k,-1):
                if nums[l]>nums[k]:
                    nums[k],nums[l] = nums[l],nums[k]
                    break
            nums[k+1:] = reversed(nums[k+1:])

            
            
Solution 2:
class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        i=len(nums)-2
        while i>=0 and nums[i]>=nums[i+1]:
            i-=1
        if i>=0:
            j=len(nums)-1
            while nums[j]<=nums[i]:
                j-=1
            nums[i],nums[j]=nums[j],nums[i]
        nums[i + 1:] = nums[i + 1:][::-1]

        

        
