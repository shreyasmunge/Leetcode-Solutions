#constriant is 0 and 1 should be adjacent and (n) numbers of 1 should be added without violating the constraint
#if n is 0 then true 
#else iterate through the loop
          #if the current element follows the following constraint then replace it by 1
                 #1 current element is 0
                 #index is 0 or previous element is 0
                 #index is last or next element is 0

SOLUTION:

class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        l=len(flowerbed)
        if n==0:                                                                                               
            return True
        for i in range(l):
            if flowerbed[i]==0 and (i==0 or flowerbed[i-1]==0) and (i==l-1 or flowerbed[i+1]==0):
                flowerbed[i]=1
                n-=1
                if n==0:
                    return True
        return False
