class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        count=0
        i,j=0,0
        n=len(s)
        longest=0
        while j<n:
            if s[j] not in s[i:j]:         #expand until no dup
                count+=1
                j+=1
            else:        #shrink until dup removed
                i+=1
                count-=1
            
            longest=max(longest,count)
        return longest
        

















class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        count=set()
        l=0
        res=0
        for r in range(len(s)):
            while s[r] in count:
                count.remove(s[l])
                l+=1
            count.add(s[r])
            res=max(res,r-l+1)
        return res
           
